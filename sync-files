#!/bin/bash
# Use > 1 to consume two arguments per pass in the loop (e.g. each
# argument has a corresponding value to go with it).
# Use > 0 to consume one or more arguments per pass in the loop (e.g.
# some arguments don't have a corresponding value to go with it such
# as in the --default example).
# note: if this is set to > 0 the /etc/hosts part is not recognized ( may be a bug )
while [[ $# > 0 ]]
do
	key="$1"
	case $key in
		-i|--install)
			echo update
			SYNC_TO=true
			shift # past argument
			;; -u|--update) 
			echo update
			SYNC_TO=true
			shift # past argument
			;;
		-c|--commit)
			echo commit
			SYNC_FROM=true
			shift # past argument
			;;
		*)
			# unknown option
			;;
	esac
	shift # past argument or value
done


bin_dir_to=~/bin
template_dir_to=~/template
mutt_dir_to=~/.mutt
vimrc_to=~/.vimrc
conkyrc_to=~/.conkyrc
svcps1rc_to=~/.svcps1rc
tmux_to=~/.tmux.conf
tmuxconf_to=~/tmux-config/
tmuxline_to=~/.tmuxline.conf
bashrc_to=~/.bashrc
zshrc_to=~/.zshrc
javarc_to=~/.java_envrc
bash_aliases_to=~/.bash_aliases
bash_functions_to=~/.bash_functions
gitconfig_to=~/.gitconfig
editorconf_to=~/.editorconfig
antigen_to=~/antigen.zsh

wd=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
d=$wd/files

bin_dir_from=$d/bin
template_dir_from=$d/template
mutt_dir_from=$d/.mutt
vimrc_from=$d/.vimrc
conkyrc_from=$d/.conkyrc
svcps1rc_from=$d/.svcps1rc
tmux_from=$d/.tmux.conf
tmuxconf_from=$d/tmux-config/
tmuxline_from=$d/.tmuxline.conf
bashrc_from=$d/.bashrc
zshrc_from=$d/.zshrc
javarc_from=$d/.java_envrc
bash_aliases_from=$d/.bash_aliases
bash_functions_from=$d/.bash_functions
gitconfig_from=$d/.gitconfig
editorconf_from=$d/.editorconfig
antigen_from=$d/antigen.zsh

sync_dir_to() {
	eval to=\$${1}_dir_to
	eval from=\$${1}_dir_from
	echo "cp -Rf ${from}/* ${to}/"
	if [[ ! -d ${to} ]]; then
		mkdir -p ${to}
	fi
	cp -Rf ${from}/* ${to}/
	if [[ ${1} == 'bin' ]];then
		chmod +x ${to}/*
	fi
}
sync_to() {
	eval to=\$${1}_to
	eval from=\$${1}_from
	if [[ ! -d "~/.vim/bundle" ]]; then
		mkdir -p ~/.vim/bundle
	fi
	echo "cp -Rf ${from} ${to}"
	cp -Rf ${from} ${to}
}

sync_dir_from() {
	eval to=\$${1}_dir_to
	eval from=\$${1}_dir_from
	echo "cp ${to} ${from}"
	if [[ ! -d ${from} ]]; then
		mkdir -p ${from}
	fi
	if [[ ${1} == 'mutt' ]];then
		cp ${to}/aliases.sh ${from}/
		cp ${to}/mailcap ${from}/
		cp -Rf ${to}/mutt-colors-solarized ${from}/
	else 
		cp -Rf ${to}/* ${from}/
	fi
}

sync_from() {
	eval to=\$${1}_to
	eval from=\$${1}_from
	# if [[ ! -f ${from} ]]
	# then
	echo "cp ${to} ${from}"
	cp ${to} ${from}
	# fi
}

do_sync_from() {
	sync_dir_from mutt
	sync_dir_from bin
	sync_dir_from template
	sync_from vimrc
	sync_from conkyrc
	sync_from svcps1rc
	sync_from tmux
	sync_from tmuxconf
	sync_from tmuxline
	sync_from bashrc
	sync_from javarc
	sync_from bash_aliases
	sync_from bash_functions
	sync_from gitconfig
	sync_from editorconf
	sync_from antigen
	sync_from zshrc

	cdold=$(pwd)
	cd $wd
	git add .
	git commit -a -m "committing latest changes"
	git push origin master
	cd $cdold
}

do_sync_to() {
	cdold=$(pwd)
	cd $wd
	git pull origin master
	cd $cdold
	sync_dir_to mutt
	sync_dir_to bin
	sync_dir_to template
	sync_to vimrc
	sync_to conkyrc
	sync_to svcps1rc
	sync_to tmux
	sync_to tmuxconf
	sync_to tmuxline
	sync_to bashrc
	sync_to javarc
	sync_to bash_aliases
	sync_to bash_functions
	sync_to gitconfig
	sync_to editorconf
	if [[ ! -f $d/antigen.zsh ]]; then
		echo "Downloading antigen.zsh..."
		curl -L https://raw.githubusercontent.com/zsh-users/antigen/master/antigen.zsh > $d/antigen.zsh
	fi
	sync_to antigen
	if [[ ! -d ~/.oh-my-zsh ]]; then
		echo "Downloading oh-my-zsh-install..."
		curl -L https://raw.githubusercontent.com/robbyrussell/oh-my-zsh/master/tools/install.sh | sh
	fi
	sync_to zshrc
}

# init_sync_from
if [[ $SYNC_FROM ]]; then
	echo "Syncing from..."
	do_sync_from

fi
if [[ $SYNC_TO ]]; then
	echo "Syncing to..."
	do_sync_to
fi
